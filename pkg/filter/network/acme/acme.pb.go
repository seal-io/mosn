// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: acme.proto

package acme

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GlobalConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AffectedListenerNames         []string             `protobuf:"bytes,1,rep,name=affected_listener_names,json=affectedListenerNames,proto3" json:"affected_listener_names,omitempty"`
	AuthEmail                     string               `protobuf:"bytes,2,opt,name=auth_email,json=authEmail,proto3" json:"auth_email,omitempty"`
	AuthSignKey                   []byte               `protobuf:"bytes,3,opt,name=auth_sign_key,json=authSignKey,proto3" json:"auth_sign_key,omitempty"`
	CertDomains                   []string             `protobuf:"bytes,4,rep,name=cert_domains,json=certDomains,proto3" json:"cert_domains,omitempty"`
	CertPrivateKey                []byte               `protobuf:"bytes,5,opt,name=cert_private_key,json=certPrivateKey,proto3" json:"cert_private_key,omitempty"`
	CertCaDirectory               string               `protobuf:"bytes,6,opt,name=cert_ca_directory,json=certCaDirectory,proto3" json:"cert_ca_directory,omitempty"`
	CertStorage                   *CertStorage         `protobuf:"bytes,7,opt,name=cert_storage,json=certStorage,proto3" json:"cert_storage,omitempty"`
	ChallengeTimeout              *durationpb.Duration `protobuf:"bytes,11,opt,name=challenge_timeout,json=challengeTimeout,proto3" json:"challenge_timeout,omitempty"`
	ChallengeInterval             *durationpb.Duration `protobuf:"bytes,12,opt,name=challenge_interval,json=challengeInterval,proto3" json:"challenge_interval,omitempty"`
	DnsNameservers                []string             `protobuf:"bytes,21,rep,name=dns_nameservers,json=dnsNameservers,proto3" json:"dns_nameservers,omitempty"`
	DnsTimeout                    *durationpb.Duration `protobuf:"bytes,22,opt,name=dns_timeout,json=dnsTimeout,proto3" json:"dns_timeout,omitempty"`
	DnsDisableCompletePropagation bool                 `protobuf:"varint,23,opt,name=dns_disable_complete_propagation,json=dnsDisableCompletePropagation,proto3" json:"dns_disable_complete_propagation,omitempty"`
}

func (x *GlobalConfig) Reset() {
	*x = GlobalConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_acme_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalConfig) ProtoMessage() {}

func (x *GlobalConfig) ProtoReflect() protoreflect.Message {
	mi := &file_acme_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalConfig.ProtoReflect.Descriptor instead.
func (*GlobalConfig) Descriptor() ([]byte, []int) {
	return file_acme_proto_rawDescGZIP(), []int{0}
}

func (x *GlobalConfig) GetAffectedListenerNames() []string {
	if x != nil {
		return x.AffectedListenerNames
	}
	return nil
}

func (x *GlobalConfig) GetAuthEmail() string {
	if x != nil {
		return x.AuthEmail
	}
	return ""
}

func (x *GlobalConfig) GetAuthSignKey() []byte {
	if x != nil {
		return x.AuthSignKey
	}
	return nil
}

func (x *GlobalConfig) GetCertDomains() []string {
	if x != nil {
		return x.CertDomains
	}
	return nil
}

func (x *GlobalConfig) GetCertPrivateKey() []byte {
	if x != nil {
		return x.CertPrivateKey
	}
	return nil
}

func (x *GlobalConfig) GetCertCaDirectory() string {
	if x != nil {
		return x.CertCaDirectory
	}
	return ""
}

func (x *GlobalConfig) GetCertStorage() *CertStorage {
	if x != nil {
		return x.CertStorage
	}
	return nil
}

func (x *GlobalConfig) GetChallengeTimeout() *durationpb.Duration {
	if x != nil {
		return x.ChallengeTimeout
	}
	return nil
}

func (x *GlobalConfig) GetChallengeInterval() *durationpb.Duration {
	if x != nil {
		return x.ChallengeInterval
	}
	return nil
}

func (x *GlobalConfig) GetDnsNameservers() []string {
	if x != nil {
		return x.DnsNameservers
	}
	return nil
}

func (x *GlobalConfig) GetDnsTimeout() *durationpb.Duration {
	if x != nil {
		return x.DnsTimeout
	}
	return nil
}

func (x *GlobalConfig) GetDnsDisableCompletePropagation() bool {
	if x != nil {
		return x.DnsDisableCompletePropagation
	}
	return false
}

type CertStorage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Storage:
	//	*CertStorage_Memory
	//	*CertStorage_Path
	Storage isCertStorage_Storage `protobuf_oneof:"storage"`
}

func (x *CertStorage) Reset() {
	*x = CertStorage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_acme_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CertStorage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CertStorage) ProtoMessage() {}

func (x *CertStorage) ProtoReflect() protoreflect.Message {
	mi := &file_acme_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CertStorage.ProtoReflect.Descriptor instead.
func (*CertStorage) Descriptor() ([]byte, []int) {
	return file_acme_proto_rawDescGZIP(), []int{1}
}

func (m *CertStorage) GetStorage() isCertStorage_Storage {
	if m != nil {
		return m.Storage
	}
	return nil
}

func (x *CertStorage) GetMemory() *CertStoreInMemory {
	if x, ok := x.GetStorage().(*CertStorage_Memory); ok {
		return x.Memory
	}
	return nil
}

func (x *CertStorage) GetPath() *CertStoreInPath {
	if x, ok := x.GetStorage().(*CertStorage_Path); ok {
		return x.Path
	}
	return nil
}

type isCertStorage_Storage interface {
	isCertStorage_Storage()
}

type CertStorage_Memory struct {
	Memory *CertStoreInMemory `protobuf:"bytes,1,opt,name=memory,proto3,oneof"`
}

type CertStorage_Path struct {
	Path *CertStoreInPath `protobuf:"bytes,2,opt,name=path,proto3,oneof"`
}

func (*CertStorage_Memory) isCertStorage_Storage() {}

func (*CertStorage_Path) isCertStorage_Storage() {}

type CertStoreInMemory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CertStoreInMemory) Reset() {
	*x = CertStoreInMemory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_acme_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CertStoreInMemory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CertStoreInMemory) ProtoMessage() {}

func (x *CertStoreInMemory) ProtoReflect() protoreflect.Message {
	mi := &file_acme_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CertStoreInMemory.ProtoReflect.Descriptor instead.
func (*CertStoreInMemory) Descriptor() ([]byte, []int) {
	return file_acme_proto_rawDescGZIP(), []int{2}
}

type CertStoreInPath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *CertStoreInPath) Reset() {
	*x = CertStoreInPath{}
	if protoimpl.UnsafeEnabled {
		mi := &file_acme_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CertStoreInPath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CertStoreInPath) ProtoMessage() {}

func (x *CertStoreInPath) ProtoReflect() protoreflect.Message {
	mi := &file_acme_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CertStoreInPath.ProtoReflect.Descriptor instead.
func (*CertStoreInPath) Descriptor() ([]byte, []int) {
	return file_acme_proto_rawDescGZIP(), []int{3}
}

func (x *CertStoreInPath) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

var File_acme_proto protoreflect.FileDescriptor

var file_acme_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x61, 0x63, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x61, 0x63,
	0x6d, 0x65, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xf8, 0x04, 0x0a, 0x0c, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x36, 0x0a, 0x17, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x15, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x75, 0x74, 0x68, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x75, 0x74, 0x68, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x75,
	0x74, 0x68, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x73, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x63, 0x65, 0x72,
	0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x11, 0x63,
	0x65, 0x72, 0x74, 0x5f, 0x63, 0x61, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x65, 0x72, 0x74, 0x43, 0x61, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x34, 0x0a, 0x0c, 0x63, 0x65, 0x72, 0x74, 0x5f,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x61, 0x63, 0x6d, 0x65, 0x2e, 0x43, 0x65, 0x72, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x52, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x46, 0x0a,
	0x11, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x10, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x48, 0x0a, 0x12, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e,
	0x67, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x63, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12,
	0x27, 0x0a, 0x0f, 0x64, 0x6e, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x6e, 0x73, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x3a, 0x0a, 0x0b, 0x64, 0x6e, 0x73, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x64, 0x6e, 0x73, 0x54, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x12, 0x47, 0x0a, 0x20, 0x64, 0x6e, 0x73, 0x5f, 0x64, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x70, 0x72, 0x6f,
	0x70, 0x61, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x17, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1d,
	0x64, 0x6e, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x78, 0x0a,
	0x0b, 0x43, 0x65, 0x72, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x06,
	0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61,
	0x63, 0x6d, 0x65, 0x2e, 0x43, 0x65, 0x72, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x4d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x48, 0x00, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12,
	0x2b, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x61, 0x63, 0x6d, 0x65, 0x2e, 0x43, 0x65, 0x72, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e,
	0x50, 0x61, 0x74, 0x68, 0x48, 0x00, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x42, 0x09, 0x0a, 0x07,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x43, 0x65, 0x72, 0x74, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x22, 0x25, 0x0a, 0x0f,
	0x43, 0x65, 0x72, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x42, 0x26, 0x5a, 0x24, 0x6d, 0x6f, 0x73, 0x6e, 0x2e, 0x69, 0x6f, 0x2f, 0x6d,
	0x6f, 0x73, 0x6e, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2f, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x61, 0x63, 0x6d, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_acme_proto_rawDescOnce sync.Once
	file_acme_proto_rawDescData = file_acme_proto_rawDesc
)

func file_acme_proto_rawDescGZIP() []byte {
	file_acme_proto_rawDescOnce.Do(func() {
		file_acme_proto_rawDescData = protoimpl.X.CompressGZIP(file_acme_proto_rawDescData)
	})
	return file_acme_proto_rawDescData
}

var file_acme_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_acme_proto_goTypes = []interface{}{
	(*GlobalConfig)(nil),        // 0: acme.GlobalConfig
	(*CertStorage)(nil),         // 1: acme.CertStorage
	(*CertStoreInMemory)(nil),   // 2: acme.CertStoreInMemory
	(*CertStoreInPath)(nil),     // 3: acme.CertStoreInPath
	(*durationpb.Duration)(nil), // 4: google.protobuf.Duration
}
var file_acme_proto_depIdxs = []int32{
	1, // 0: acme.GlobalConfig.cert_storage:type_name -> acme.CertStorage
	4, // 1: acme.GlobalConfig.challenge_timeout:type_name -> google.protobuf.Duration
	4, // 2: acme.GlobalConfig.challenge_interval:type_name -> google.protobuf.Duration
	4, // 3: acme.GlobalConfig.dns_timeout:type_name -> google.protobuf.Duration
	2, // 4: acme.CertStorage.memory:type_name -> acme.CertStoreInMemory
	3, // 5: acme.CertStorage.path:type_name -> acme.CertStoreInPath
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_acme_proto_init() }
func file_acme_proto_init() {
	if File_acme_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_acme_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_acme_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CertStorage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_acme_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CertStoreInMemory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_acme_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CertStoreInPath); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_acme_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*CertStorage_Memory)(nil),
		(*CertStorage_Path)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_acme_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_acme_proto_goTypes,
		DependencyIndexes: file_acme_proto_depIdxs,
		MessageInfos:      file_acme_proto_msgTypes,
	}.Build()
	File_acme_proto = out.File
	file_acme_proto_rawDesc = nil
	file_acme_proto_goTypes = nil
	file_acme_proto_depIdxs = nil
}
